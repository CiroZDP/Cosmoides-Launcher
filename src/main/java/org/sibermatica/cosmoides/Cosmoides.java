package org.sibermatica.cosmoides;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Future;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.imageio.ImageIO;

/**
 *
 * @author CiroZDP
 */
public class Cosmoides extends javax.swing.JFrame {

    public static final int BUILD_RELEASE = 0;
    public static final int BUILD_NIGHTLY = 1;
    
    /**
     * Creates new form Cosmoides
     */
    public Cosmoides() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cosmoides Launcher 1.0.0");
        setBackground(new java.awt.Color(38, 38, 38));
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        setForeground(new java.awt.Color(255, 255, 255));
        setName("frame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 640));
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 640));

        jPanel1.setBackground(new java.awt.Color(38, 38, 38));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");
        jPanel1.setName("main_container"); // NOI18N
        jPanel1.setLayout(null);

        jButton1.setBackground(new java.awt.Color(0, 137, 69));
        jButton1.setFont(getMinecraftTen().deriveFont(Font.PLAIN, 24));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("DOWNLOAD");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(460, 510, 280, 60);
        jButton1.getAccessibleContext().setAccessibleName("");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Latest Release", "Latest Build" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 190, 630);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(null);

        jLabel1.setFont(getMinecraftFont().deriveFont(Font.PLAIN, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Downloading...");
        jLabel1.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(jLabel1);
        jLabel1.setBounds(110, 110, 620, 50);
        jLabel1.getAccessibleContext().setAccessibleName("");
        jLabel1.getAccessibleContext().setAccessibleDescription("");

        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setRequestFocusEnabled(false);
        jPanel2.add(jProgressBar1);
        jProgressBar1.setBounds(110, 180, 620, 20);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(190, 40, 830, 310);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jList1ValueChanged

    private String getBuildURLByNumber(int number) {
        if (number == BUILD_RELEASE) {
            return "https://cdn.classicube.net/client/release/win32/ClassiCube.exe";
        }
        return "suerte descargando esto!";
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        String path = String.join(File.separator, "classicube", "ClassiCube.exe");
        File file = new File(path);
        
        if (file.exists()) {
            jButton1.setText("PLAY");
            try {
                Runtime.getRuntime().exec(path);
            } catch (Exception e) {
            }
            
            return;
        }
        
        Future<Void> future = DownloadHelper.download(getBuildURLByNumber(jList1.getSelectedIndex()), path);
        Runnable progressBarManagerRunnable = () -> {
            if (jPanel2.isVisible())
                return;
            
            while (!future.isDone()) {
                jPanel2.setVisible(true);
                jButton1.setText("DOWNLOAD");
            }
            
            jPanel2.setVisible(false);
            jButton1.setText("PLAY");
        };
        
        Thread progressBarManagerThread = new Thread(progressBarManagerRunnable);
        progressBarManagerThread.start();
    }//GEN-LAST:event_jButton1MouseClicked

    public Font getMinecraftTen() {
        try {
            return Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/fonts/Minecraft-Ten-ed29a.otf"));
        } catch (Exception ignored) {
        }
        
        return new Font("Dialog", Font.PLAIN, 12);
    }
    
    public Font getMinecraftFont() {
        try {
            return Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/fonts/Mojangles.ttf"));
        } catch (Exception ignored) {
        }
        
        return new Font("Dialog", Font.PLAIN, 12);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        FlatDarkLaf.setup();
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Cosmoides cosmoides = new Cosmoides();
                try {
                    List<String> iconPaths = new ArrayList<>();
                    for (int resolution = 16; resolution < 257; resolution *= 2) {
                        iconPaths.add("/icon/icon-" + resolution + ".png");
                    }
                    
                    List<BufferedImage> icons = iconPaths.stream().map(path -> {
                        try {
                            return ImageIO.read(Cosmoides.class.getResourceAsStream(path));
                        } catch (Exception ignored) {
                            return null;
                        }
                    }).collect(Collectors.toList());
                    
                    if (!icons.stream().anyMatch(o -> o == null))
                        cosmoides.setIconImages(icons);
                
                } catch (Exception ignored) {
                }
                
                cosmoides.jPanel2.setVisible(false);
                cosmoides.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
